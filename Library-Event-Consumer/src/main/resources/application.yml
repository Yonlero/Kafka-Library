spring:
  profiles:
    active: dev-local
server:
  port: 8081
topics:
  retry: "library-events.RETRY"
  dlt: "library-events.DLT"
---
spring:
  kafka:
    template:
      default-topic: library-events
    consumer:
      bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group
    producer:
      bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    admin:
      properties:
        bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
    listener:
      ack-mode: manual
  config:
    activate:
      on-profile: dev-local
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
  h2:
    console:
      enabled: true

---

spring:
  kafka:
    consumer:
      bootstrap-servers: localhost:9092, localhost:9093, localhost:9094
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: library-events-listener-group
  config:
    activate:
      on-profile: dev-docker

---

spring:
  kafka:
      consumer:
        bootstrap-servers: ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}
        key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        group-id: library-events-listener-group
        auto-offset-reset: earliest
      producer:
        bootstrap-servers: ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}
        key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
      admin:
        properties:
          bootstrap-servers: ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}, ${spring.embedded.kafka.brokers}
  config:
    activate:
      on-profile: dev-local-test